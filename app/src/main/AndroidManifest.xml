<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.codingwithmitch.audiostreamer">

    <uses-permission android:name="android.permission.INTERNET"/>

    <application
        android:name=".MyApplication"
        android:allowBackup="false"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity android:name=".ui.MainActivity"
            android:windowSoftInputMode="adjustPan">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <service
            android:name=".services.MediaService"
            android:enabled="true"
            android:exported="true">
            <intent-filter>
                <action android:name="android.media.browse.MediaBrowserService"/>
            </intent-filter>
        </service>

        <!--
             MediaSession, prior to API 21, uses a broadcast receiver to communicate with a
             media session. It does not have to be this broadcast receiver, but it must
             handle the action "android.intent.action.MEDIA_BUTTON".

             Additionally, this is used to resume the service from an inactive state upon
             receiving a media button event (such as "play").

             The BroadcastReceiver forwards the intent to your service. To parse the intent and generate the callback
             to your media session, include the MediaButtonReceiver.handleIntent() method in your service's
             onStartCommand(). This translates the key code into the appropriate session callback method.

             https://developer.android.com/guide/topics/media-apps/mediabuttons#mediabuttons-and-active-mediasessions
        -->
        <receiver android:name="android.support.v4.media.session.MediaButtonReceiver">
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON"/>
            </intent-filter>
        </receiver>

    </application>

</manifest>